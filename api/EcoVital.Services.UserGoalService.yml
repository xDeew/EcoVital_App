### YamlMime:ManagedReference
items:
- uid: EcoVital.Services.UserGoalService
  commentId: T:EcoVital.Services.UserGoalService
  id: UserGoalService
  parent: EcoVital.Services
  children:
  - EcoVital.Services.UserGoalService.#ctor(System.Net.Http.HttpClient)
  - EcoVital.Services.UserGoalService.DeleteUserGoalAsync(System.Int32)
  - EcoVital.Services.UserGoalService.GetUserGoalAsync(System.Int32)
  - EcoVital.Services.UserGoalService.GetUserGoalByActivityIdAsync(System.Int32)
  - EcoVital.Services.UserGoalService.GetUserGoalsAsync
  - EcoVital.Services.UserGoalService.PostUserGoalAsync(System.Int32,EcoVital.Models.UserGoal,System.Int32)
  - EcoVital.Services.UserGoalService.UpdateGoalAsync(EcoVital.Models.UserGoal)
  langs:
  - csharp
  - vb
  name: UserGoalService
  nameWithType: UserGoalService
  fullName: EcoVital.Services.UserGoalService
  type: Class
  source:
    remote:
      path: EcoVital/Services/UserGoalService.cs
      branch: main
      repo: https://github.com/xDeew/EcoVital_App.git
    id: UserGoalService
    path: EcoVital/Services/UserGoalService.cs
    startLine: 8
  assemblies:
  - EcoVital
  namespace: EcoVital.Services
  summary: Proporciona servicios para gestionar las metas de los usuarios relacionadas con actividades.
  example: []
  syntax:
    content: public class UserGoalService
    content.vb: Public Class UserGoalService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: EcoVital.Services.UserGoalService.#ctor(System.Net.Http.HttpClient)
  commentId: M:EcoVital.Services.UserGoalService.#ctor(System.Net.Http.HttpClient)
  id: '#ctor(System.Net.Http.HttpClient)'
  parent: EcoVital.Services.UserGoalService
  langs:
  - csharp
  - vb
  name: UserGoalService(HttpClient)
  nameWithType: UserGoalService.UserGoalService(HttpClient)
  fullName: EcoVital.Services.UserGoalService.UserGoalService(System.Net.Http.HttpClient)
  type: Constructor
  source:
    remote:
      path: EcoVital/Services/UserGoalService.cs
      branch: main
      repo: https://github.com/xDeew/EcoVital_App.git
    id: .ctor
    path: EcoVital/Services/UserGoalService.cs
    startLine: 17
  assemblies:
  - EcoVital
  namespace: EcoVital.Services
  summary: Inicializa una nueva instancia de la clase <xref href="EcoVital.Services.UserGoalService" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public UserGoalService(HttpClient client)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
      description: Instancia de <xref href="System.Net.Http.HttpClient" data-throw-if-not-resolved="false"></xref> para realizar solicitudes HTTP.
    content.vb: Public Sub New(client As HttpClient)
  overload: EcoVital.Services.UserGoalService.#ctor*
  nameWithType.vb: UserGoalService.New(HttpClient)
  fullName.vb: EcoVital.Services.UserGoalService.New(System.Net.Http.HttpClient)
  name.vb: New(HttpClient)
- uid: EcoVital.Services.UserGoalService.GetUserGoalsAsync
  commentId: M:EcoVital.Services.UserGoalService.GetUserGoalsAsync
  id: GetUserGoalsAsync
  parent: EcoVital.Services.UserGoalService
  langs:
  - csharp
  - vb
  name: GetUserGoalsAsync()
  nameWithType: UserGoalService.GetUserGoalsAsync()
  fullName: EcoVital.Services.UserGoalService.GetUserGoalsAsync()
  type: Method
  source:
    remote:
      path: EcoVital/Services/UserGoalService.cs
      branch: main
      repo: https://github.com/xDeew/EcoVital_App.git
    id: GetUserGoalsAsync
    path: EcoVital/Services/UserGoalService.cs
    startLine: 26
  assemblies:
  - EcoVital
  namespace: EcoVital.Services
  summary: Obtiene todas las metas de los usuarios.
  example: []
  syntax:
    content: public Task<List<UserGoal>> GetUserGoalsAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{EcoVital.Models.UserGoal}}
      description: Una lista de <xref href="EcoVital.Models.UserGoal" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GetUserGoalsAsync() As Task(Of List(Of UserGoal))
  overload: EcoVital.Services.UserGoalService.GetUserGoalsAsync*
- uid: EcoVital.Services.UserGoalService.GetUserGoalAsync(System.Int32)
  commentId: M:EcoVital.Services.UserGoalService.GetUserGoalAsync(System.Int32)
  id: GetUserGoalAsync(System.Int32)
  parent: EcoVital.Services.UserGoalService
  langs:
  - csharp
  - vb
  name: GetUserGoalAsync(int)
  nameWithType: UserGoalService.GetUserGoalAsync(int)
  fullName: EcoVital.Services.UserGoalService.GetUserGoalAsync(int)
  type: Method
  source:
    remote:
      path: EcoVital/Services/UserGoalService.cs
      branch: main
      repo: https://github.com/xDeew/EcoVital_App.git
    id: GetUserGoalAsync
    path: EcoVital/Services/UserGoalService.cs
    startLine: 34
  assemblies:
  - EcoVital
  namespace: EcoVital.Services
  summary: Obtiene una meta de usuario por su identificador.
  example: []
  syntax:
    content: public Task<UserGoal> GetUserGoalAsync(int id)
    parameters:
    - id: id
      type: System.Int32
      description: El identificador de la meta del usuario.
    return:
      type: System.Threading.Tasks.Task{EcoVital.Models.UserGoal}
      description: La meta de usuario solicitada.
    content.vb: Public Function GetUserGoalAsync(id As Integer) As Task(Of UserGoal)
  overload: EcoVital.Services.UserGoalService.GetUserGoalAsync*
  nameWithType.vb: UserGoalService.GetUserGoalAsync(Integer)
  fullName.vb: EcoVital.Services.UserGoalService.GetUserGoalAsync(Integer)
  name.vb: GetUserGoalAsync(Integer)
- uid: EcoVital.Services.UserGoalService.PostUserGoalAsync(System.Int32,EcoVital.Models.UserGoal,System.Int32)
  commentId: M:EcoVital.Services.UserGoalService.PostUserGoalAsync(System.Int32,EcoVital.Models.UserGoal,System.Int32)
  id: PostUserGoalAsync(System.Int32,EcoVital.Models.UserGoal,System.Int32)
  parent: EcoVital.Services.UserGoalService
  langs:
  - csharp
  - vb
  name: PostUserGoalAsync(int, UserGoal, int)
  nameWithType: UserGoalService.PostUserGoalAsync(int, UserGoal, int)
  fullName: EcoVital.Services.UserGoalService.PostUserGoalAsync(int, EcoVital.Models.UserGoal, int)
  type: Method
  source:
    remote:
      path: EcoVital/Services/UserGoalService.cs
      branch: main
      repo: https://github.com/xDeew/EcoVital_App.git
    id: PostUserGoalAsync
    path: EcoVital/Services/UserGoalService.cs
    startLine: 47
  assemblies:
  - EcoVital
  namespace: EcoVital.Services
  summary: Publica una nueva meta de usuario.
  example: []
  syntax:
    content: public Task PostUserGoalAsync(int userId, UserGoal userGoal, int activityRecordId)
    parameters:
    - id: userId
      type: System.Int32
      description: El identificador del usuario.
    - id: userGoal
      type: EcoVital.Models.UserGoal
      description: La meta del usuario a publicar.
    - id: activityRecordId
      type: System.Int32
      description: El identificador del registro de actividad asociado a la meta.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function PostUserGoalAsync(userId As Integer, userGoal As UserGoal, activityRecordId As Integer) As Task
  overload: EcoVital.Services.UserGoalService.PostUserGoalAsync*
  nameWithType.vb: UserGoalService.PostUserGoalAsync(Integer, UserGoal, Integer)
  fullName.vb: EcoVital.Services.UserGoalService.PostUserGoalAsync(Integer, EcoVital.Models.UserGoal, Integer)
  name.vb: PostUserGoalAsync(Integer, UserGoal, Integer)
- uid: EcoVital.Services.UserGoalService.UpdateGoalAsync(EcoVital.Models.UserGoal)
  commentId: M:EcoVital.Services.UserGoalService.UpdateGoalAsync(EcoVital.Models.UserGoal)
  id: UpdateGoalAsync(EcoVital.Models.UserGoal)
  parent: EcoVital.Services.UserGoalService
  langs:
  - csharp
  - vb
  name: UpdateGoalAsync(UserGoal)
  nameWithType: UserGoalService.UpdateGoalAsync(UserGoal)
  fullName: EcoVital.Services.UserGoalService.UpdateGoalAsync(EcoVital.Models.UserGoal)
  type: Method
  source:
    remote:
      path: EcoVital/Services/UserGoalService.cs
      branch: main
      repo: https://github.com/xDeew/EcoVital_App.git
    id: UpdateGoalAsync
    path: EcoVital/Services/UserGoalService.cs
    startLine: 61
  assemblies:
  - EcoVital
  namespace: EcoVital.Services
  summary: Actualiza una meta de usuario existente.
  example: []
  syntax:
    content: public Task<UserGoal> UpdateGoalAsync(UserGoal userGoal)
    parameters:
    - id: userGoal
      type: EcoVital.Models.UserGoal
      description: La meta del usuario a actualizar.
    return:
      type: System.Threading.Tasks.Task{EcoVital.Models.UserGoal}
      description: La meta de usuario actualizada.
    content.vb: Public Function UpdateGoalAsync(userGoal As UserGoal) As Task(Of UserGoal)
  overload: EcoVital.Services.UserGoalService.UpdateGoalAsync*
- uid: EcoVital.Services.UserGoalService.GetUserGoalByActivityIdAsync(System.Int32)
  commentId: M:EcoVital.Services.UserGoalService.GetUserGoalByActivityIdAsync(System.Int32)
  id: GetUserGoalByActivityIdAsync(System.Int32)
  parent: EcoVital.Services.UserGoalService
  langs:
  - csharp
  - vb
  name: GetUserGoalByActivityIdAsync(int)
  nameWithType: UserGoalService.GetUserGoalByActivityIdAsync(int)
  fullName: EcoVital.Services.UserGoalService.GetUserGoalByActivityIdAsync(int)
  type: Method
  source:
    remote:
      path: EcoVital/Services/UserGoalService.cs
      branch: main
      repo: https://github.com/xDeew/EcoVital_App.git
    id: GetUserGoalByActivityIdAsync
    path: EcoVital/Services/UserGoalService.cs
    startLine: 75
  assemblies:
  - EcoVital
  namespace: EcoVital.Services
  summary: Obtiene una meta de usuario por el identificador de la actividad asociada.
  example: []
  syntax:
    content: public Task<UserGoal> GetUserGoalByActivityIdAsync(int activityId)
    parameters:
    - id: activityId
      type: System.Int32
      description: El identificador de la actividad.
    return:
      type: System.Threading.Tasks.Task{EcoVital.Models.UserGoal}
      description: La meta de usuario solicitada.
    content.vb: Public Function GetUserGoalByActivityIdAsync(activityId As Integer) As Task(Of UserGoal)
  overload: EcoVital.Services.UserGoalService.GetUserGoalByActivityIdAsync*
  nameWithType.vb: UserGoalService.GetUserGoalByActivityIdAsync(Integer)
  fullName.vb: EcoVital.Services.UserGoalService.GetUserGoalByActivityIdAsync(Integer)
  name.vb: GetUserGoalByActivityIdAsync(Integer)
- uid: EcoVital.Services.UserGoalService.DeleteUserGoalAsync(System.Int32)
  commentId: M:EcoVital.Services.UserGoalService.DeleteUserGoalAsync(System.Int32)
  id: DeleteUserGoalAsync(System.Int32)
  parent: EcoVital.Services.UserGoalService
  langs:
  - csharp
  - vb
  name: DeleteUserGoalAsync(int)
  nameWithType: UserGoalService.DeleteUserGoalAsync(int)
  fullName: EcoVital.Services.UserGoalService.DeleteUserGoalAsync(int)
  type: Method
  source:
    remote:
      path: EcoVital/Services/UserGoalService.cs
      branch: main
      repo: https://github.com/xDeew/EcoVital_App.git
    id: DeleteUserGoalAsync
    path: EcoVital/Services/UserGoalService.cs
    startLine: 86
  assemblies:
  - EcoVital
  namespace: EcoVital.Services
  summary: Elimina una meta de usuario por su identificador.
  example: []
  syntax:
    content: public Task DeleteUserGoalAsync(int id)
    parameters:
    - id: id
      type: System.Int32
      description: El identificador de la meta del usuario a eliminar.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteUserGoalAsync(id As Integer) As Task
  overload: EcoVital.Services.UserGoalService.DeleteUserGoalAsync*
  nameWithType.vb: UserGoalService.DeleteUserGoalAsync(Integer)
  fullName.vb: EcoVital.Services.UserGoalService.DeleteUserGoalAsync(Integer)
  name.vb: DeleteUserGoalAsync(Integer)
references:
- uid: EcoVital.Services
  commentId: N:EcoVital.Services
  href: EcoVital.html
  name: EcoVital.Services
  nameWithType: EcoVital.Services
  fullName: EcoVital.Services
  spec.csharp:
  - uid: EcoVital
    name: EcoVital
    href: EcoVital.html
  - name: .
  - uid: EcoVital.Services
    name: Services
    href: EcoVital.Services.html
  spec.vb:
  - uid: EcoVital
    name: EcoVital
    href: EcoVital.html
  - name: .
  - uid: EcoVital.Services
    name: Services
    href: EcoVital.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: EcoVital.Services.UserGoalService
  commentId: T:EcoVital.Services.UserGoalService
  parent: EcoVital.Services
  href: EcoVital.Services.UserGoalService.html
  name: UserGoalService
  nameWithType: UserGoalService
  fullName: EcoVital.Services.UserGoalService
- uid: System.Net.Http.HttpClient
  commentId: T:System.Net.Http.HttpClient
  parent: System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.httpclient
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: EcoVital.Services.UserGoalService.#ctor*
  commentId: Overload:EcoVital.Services.UserGoalService.#ctor
  href: EcoVital.Services.UserGoalService.html#EcoVital_Services_UserGoalService__ctor_System_Net_Http_HttpClient_
  name: UserGoalService
  nameWithType: UserGoalService.UserGoalService
  fullName: EcoVital.Services.UserGoalService.UserGoalService
  nameWithType.vb: UserGoalService.New
  fullName.vb: EcoVital.Services.UserGoalService.New
  name.vb: New
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
- uid: EcoVital.Models.UserGoal
  commentId: T:EcoVital.Models.UserGoal
  parent: EcoVital.Models
  href: EcoVital.Models.UserGoal.html
  name: UserGoal
  nameWithType: UserGoal
  fullName: EcoVital.Models.UserGoal
- uid: EcoVital.Services.UserGoalService.GetUserGoalsAsync*
  commentId: Overload:EcoVital.Services.UserGoalService.GetUserGoalsAsync
  href: EcoVital.Services.UserGoalService.html#EcoVital_Services_UserGoalService_GetUserGoalsAsync
  name: GetUserGoalsAsync
  nameWithType: UserGoalService.GetUserGoalsAsync
  fullName: EcoVital.Services.UserGoalService.GetUserGoalsAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{EcoVital.Models.UserGoal}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{EcoVital.Models.UserGoal}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<List<UserGoal>>
  nameWithType: Task<List<UserGoal>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<EcoVital.Models.UserGoal>>
  nameWithType.vb: Task(Of List(Of UserGoal))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of EcoVital.Models.UserGoal))
  name.vb: Task(Of List(Of UserGoal))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: EcoVital.Models.UserGoal
    name: UserGoal
    href: EcoVital.Models.UserGoal.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: EcoVital.Models.UserGoal
    name: UserGoal
    href: EcoVital.Models.UserGoal.html
  - name: )
  - name: )
- uid: EcoVital.Models
  commentId: N:EcoVital.Models
  href: EcoVital.html
  name: EcoVital.Models
  nameWithType: EcoVital.Models
  fullName: EcoVital.Models
  spec.csharp:
  - uid: EcoVital
    name: EcoVital
    href: EcoVital.html
  - name: .
  - uid: EcoVital.Models
    name: Models
    href: EcoVital.Models.html
  spec.vb:
  - uid: EcoVital
    name: EcoVital
    href: EcoVital.html
  - name: .
  - uid: EcoVital.Models
    name: Models
    href: EcoVital.Models.html
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: EcoVital.Services.UserGoalService.GetUserGoalAsync*
  commentId: Overload:EcoVital.Services.UserGoalService.GetUserGoalAsync
  href: EcoVital.Services.UserGoalService.html#EcoVital_Services_UserGoalService_GetUserGoalAsync_System_Int32_
  name: GetUserGoalAsync
  nameWithType: UserGoalService.GetUserGoalAsync
  fullName: EcoVital.Services.UserGoalService.GetUserGoalAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task{EcoVital.Models.UserGoal}
  commentId: T:System.Threading.Tasks.Task{EcoVital.Models.UserGoal}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<UserGoal>
  nameWithType: Task<UserGoal>
  fullName: System.Threading.Tasks.Task<EcoVital.Models.UserGoal>
  nameWithType.vb: Task(Of UserGoal)
  fullName.vb: System.Threading.Tasks.Task(Of EcoVital.Models.UserGoal)
  name.vb: Task(Of UserGoal)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: EcoVital.Models.UserGoal
    name: UserGoal
    href: EcoVital.Models.UserGoal.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: EcoVital.Models.UserGoal
    name: UserGoal
    href: EcoVital.Models.UserGoal.html
  - name: )
- uid: EcoVital.Services.UserGoalService.PostUserGoalAsync*
  commentId: Overload:EcoVital.Services.UserGoalService.PostUserGoalAsync
  href: EcoVital.Services.UserGoalService.html#EcoVital_Services_UserGoalService_PostUserGoalAsync_System_Int32_EcoVital_Models_UserGoal_System_Int32_
  name: PostUserGoalAsync
  nameWithType: UserGoalService.PostUserGoalAsync
  fullName: EcoVital.Services.UserGoalService.PostUserGoalAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: EcoVital.Services.UserGoalService.UpdateGoalAsync*
  commentId: Overload:EcoVital.Services.UserGoalService.UpdateGoalAsync
  href: EcoVital.Services.UserGoalService.html#EcoVital_Services_UserGoalService_UpdateGoalAsync_EcoVital_Models_UserGoal_
  name: UpdateGoalAsync
  nameWithType: UserGoalService.UpdateGoalAsync
  fullName: EcoVital.Services.UserGoalService.UpdateGoalAsync
- uid: EcoVital.Services.UserGoalService.GetUserGoalByActivityIdAsync*
  commentId: Overload:EcoVital.Services.UserGoalService.GetUserGoalByActivityIdAsync
  href: EcoVital.Services.UserGoalService.html#EcoVital_Services_UserGoalService_GetUserGoalByActivityIdAsync_System_Int32_
  name: GetUserGoalByActivityIdAsync
  nameWithType: UserGoalService.GetUserGoalByActivityIdAsync
  fullName: EcoVital.Services.UserGoalService.GetUserGoalByActivityIdAsync
- uid: EcoVital.Services.UserGoalService.DeleteUserGoalAsync*
  commentId: Overload:EcoVital.Services.UserGoalService.DeleteUserGoalAsync
  href: EcoVital.Services.UserGoalService.html#EcoVital_Services_UserGoalService_DeleteUserGoalAsync_System_Int32_
  name: DeleteUserGoalAsync
  nameWithType: UserGoalService.DeleteUserGoalAsync
  fullName: EcoVital.Services.UserGoalService.DeleteUserGoalAsync
