### YamlMime:ManagedReference
items:
- uid: EcoVital.Services.LoginService
  commentId: T:EcoVital.Services.LoginService
  id: LoginService
  parent: EcoVital.Services
  children:
  - EcoVital.Services.LoginService.ChangePassword(System.Int32,System.String)
  - EcoVital.Services.LoginService.GetSecurityQuestionByQuestion(System.String,System.Int32)
  - EcoVital.Services.LoginService.GetSecurityQuestionByUserId(System.Int32)
  - EcoVital.Services.LoginService.GetUserByEmail(System.String)
  - EcoVital.Services.LoginService.Login(System.String,System.String)
  - EcoVital.Services.LoginService.Register(System.String,System.String,System.String)
  - EcoVital.Services.LoginService.SendSecurityQuestion(System.Object)
  - EcoVital.Services.LoginService.UserExists(System.String)
  langs:
  - csharp
  - vb
  name: LoginService
  nameWithType: LoginService
  fullName: EcoVital.Services.LoginService
  type: Class
  source:
    remote:
      path: EcoVital/Services/LoginService.cs
      branch: main
      repo: https://github.com/xDeew/EcoVital_App.git
    id: LoginService
    path: EcoVital/Services/LoginService.cs
    startLine: 13
  assemblies:
  - EcoVital
  namespace: EcoVital.Services
  summary: Proporciona servicios relacionados con el inicio de sesión y el registro de usuarios.
  example: []
  syntax:
    content: 'public class LoginService : ILoginRepository'
    content.vb: Public Class LoginService Implements ILoginRepository
  inheritance:
  - System.Object
  implements:
  - EcoVital.Services.ILoginRepository
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: EcoVital.Services.LoginService.Login(System.String,System.String)
  commentId: M:EcoVital.Services.LoginService.Login(System.String,System.String)
  id: Login(System.String,System.String)
  parent: EcoVital.Services.LoginService
  langs:
  - csharp
  - vb
  name: Login(string, string)
  nameWithType: LoginService.Login(string, string)
  fullName: EcoVital.Services.LoginService.Login(string, string)
  type: Method
  source:
    remote:
      path: EcoVital/Services/LoginService.cs
      branch: main
      repo: https://github.com/xDeew/EcoVital_App.git
    id: Login
    path: EcoVital/Services/LoginService.cs
    startLine: 23
  assemblies:
  - EcoVital
  namespace: EcoVital.Services
  summary: Inicia sesión con el nombre de usuario o correo electrónico y la contraseña proporcionados.
  example: []
  syntax:
    content: public Task<UserInfo> Login(string usernameOrEmail, string password)
    parameters:
    - id: usernameOrEmail
      type: System.String
      description: El nombre de usuario o correo electrónico del usuario.
    - id: password
      type: System.String
      description: La contraseña del usuario.
    return:
      type: System.Threading.Tasks.Task{EcoVital.Models.UserInfo}
      description: Una tarea que representa la operación asincrónica y contiene la información del usuario.
    content.vb: Public Function Login(usernameOrEmail As String, password As String) As Task(Of UserInfo)
  overload: EcoVital.Services.LoginService.Login*
  implements:
  - EcoVital.Services.ILoginRepository.Login(System.String,System.String)
  nameWithType.vb: LoginService.Login(String, String)
  fullName.vb: EcoVital.Services.LoginService.Login(String, String)
  name.vb: Login(String, String)
- uid: EcoVital.Services.LoginService.Register(System.String,System.String,System.String)
  commentId: M:EcoVital.Services.LoginService.Register(System.String,System.String,System.String)
  id: Register(System.String,System.String,System.String)
  parent: EcoVital.Services.LoginService
  langs:
  - csharp
  - vb
  name: Register(string, string, string)
  nameWithType: LoginService.Register(string, string, string)
  fullName: EcoVital.Services.LoginService.Register(string, string, string)
  type: Method
  source:
    remote:
      path: EcoVital/Services/LoginService.cs
      branch: main
      repo: https://github.com/xDeew/EcoVital_App.git
    id: Register
    path: EcoVital/Services/LoginService.cs
    startLine: 72
  assemblies:
  - EcoVital
  namespace: EcoVital.Services
  summary: Registra un nuevo usuario con el correo electrónico, nombre de usuario y contraseña proporcionados.
  example: []
  syntax:
    content: public Task<UserInfo> Register(string email, string username, string password)
    parameters:
    - id: email
      type: System.String
      description: El correo electrónico del usuario.
    - id: username
      type: System.String
      description: El nombre de usuario.
    - id: password
      type: System.String
      description: La contraseña del usuario.
    return:
      type: System.Threading.Tasks.Task{EcoVital.Models.UserInfo}
      description: Una tarea que representa la operación asincrónica y contiene la información del usuario registrado.
    content.vb: Public Function Register(email As String, username As String, password As String) As Task(Of UserInfo)
  overload: EcoVital.Services.LoginService.Register*
  implements:
  - EcoVital.Services.ILoginRepository.Register(System.String,System.String,System.String)
  nameWithType.vb: LoginService.Register(String, String, String)
  fullName.vb: EcoVital.Services.LoginService.Register(String, String, String)
  name.vb: Register(String, String, String)
- uid: EcoVital.Services.LoginService.SendSecurityQuestion(System.Object)
  commentId: M:EcoVital.Services.LoginService.SendSecurityQuestion(System.Object)
  id: SendSecurityQuestion(System.Object)
  parent: EcoVital.Services.LoginService
  langs:
  - csharp
  - vb
  name: SendSecurityQuestion(object)
  nameWithType: LoginService.SendSecurityQuestion(object)
  fullName: EcoVital.Services.LoginService.SendSecurityQuestion(object)
  type: Method
  source:
    remote:
      path: EcoVital/Services/LoginService.cs
      branch: main
      repo: https://github.com/xDeew/EcoVital_App.git
    id: SendSecurityQuestion
    path: EcoVital/Services/LoginService.cs
    startLine: 130
  assemblies:
  - EcoVital
  namespace: EcoVital.Services
  summary: Envía una pregunta de seguridad.
  example: []
  syntax:
    content: public Task<HttpResponseMessage> SendSecurityQuestion(object securityQuestion)
    parameters:
    - id: securityQuestion
      type: System.Object
      description: La pregunta de seguridad a enviar.
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: Una tarea que representa la operación asincrónica y contiene el resultado de la solicitud HTTP.
    content.vb: Public Function SendSecurityQuestion(securityQuestion As Object) As Task(Of HttpResponseMessage)
  overload: EcoVital.Services.LoginService.SendSecurityQuestion*
  implements:
  - EcoVital.Services.ILoginRepository.SendSecurityQuestion(System.Object)
  nameWithType.vb: LoginService.SendSecurityQuestion(Object)
  fullName.vb: EcoVital.Services.LoginService.SendSecurityQuestion(Object)
  name.vb: SendSecurityQuestion(Object)
- uid: EcoVital.Services.LoginService.UserExists(System.String)
  commentId: M:EcoVital.Services.LoginService.UserExists(System.String)
  id: UserExists(System.String)
  parent: EcoVital.Services.LoginService
  langs:
  - csharp
  - vb
  name: UserExists(string)
  nameWithType: LoginService.UserExists(string)
  fullName: EcoVital.Services.LoginService.UserExists(string)
  type: Method
  source:
    remote:
      path: EcoVital/Services/LoginService.cs
      branch: main
      repo: https://github.com/xDeew/EcoVital_App.git
    id: UserExists
    path: EcoVital/Services/LoginService.cs
    startLine: 148
  assemblies:
  - EcoVital
  namespace: EcoVital.Services
  summary: Verifica si un usuario existe por su nombre de usuario o correo electrónico.
  example: []
  syntax:
    content: public Task<bool> UserExists(string userNameOrEmail)
    parameters:
    - id: userNameOrEmail
      type: System.String
      description: El nombre de usuario o correo electrónico del usuario.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Una tarea que representa la operación asincrónica y contiene un valor que indica si el usuario existe.
    content.vb: Public Function UserExists(userNameOrEmail As String) As Task(Of Boolean)
  overload: EcoVital.Services.LoginService.UserExists*
  implements:
  - EcoVital.Services.ILoginRepository.UserExists(System.String)
  nameWithType.vb: LoginService.UserExists(String)
  fullName.vb: EcoVital.Services.LoginService.UserExists(String)
  name.vb: UserExists(String)
- uid: EcoVital.Services.LoginService.GetUserByEmail(System.String)
  commentId: M:EcoVital.Services.LoginService.GetUserByEmail(System.String)
  id: GetUserByEmail(System.String)
  parent: EcoVital.Services.LoginService
  langs:
  - csharp
  - vb
  name: GetUserByEmail(string)
  nameWithType: LoginService.GetUserByEmail(string)
  fullName: EcoVital.Services.LoginService.GetUserByEmail(string)
  type: Method
  source:
    remote:
      path: EcoVital/Services/LoginService.cs
      branch: main
      repo: https://github.com/xDeew/EcoVital_App.git
    id: GetUserByEmail
    path: EcoVital/Services/LoginService.cs
    startLine: 180
  assemblies:
  - EcoVital
  namespace: EcoVital.Services
  summary: Obtiene la información del usuario por su correo electrónico.
  example: []
  syntax:
    content: public Task<UserInfo> GetUserByEmail(string email)
    parameters:
    - id: email
      type: System.String
      description: El correo electrónico del usuario.
    return:
      type: System.Threading.Tasks.Task{EcoVital.Models.UserInfo}
      description: Una tarea que representa la operación asincrónica y contiene la información del usuario.
    content.vb: Public Function GetUserByEmail(email As String) As Task(Of UserInfo)
  overload: EcoVital.Services.LoginService.GetUserByEmail*
  implements:
  - EcoVital.Services.ILoginRepository.GetUserByEmail(System.String)
  nameWithType.vb: LoginService.GetUserByEmail(String)
  fullName.vb: EcoVital.Services.LoginService.GetUserByEmail(String)
  name.vb: GetUserByEmail(String)
- uid: EcoVital.Services.LoginService.GetSecurityQuestionByUserId(System.Int32)
  commentId: M:EcoVital.Services.LoginService.GetSecurityQuestionByUserId(System.Int32)
  id: GetSecurityQuestionByUserId(System.Int32)
  parent: EcoVital.Services.LoginService
  langs:
  - csharp
  - vb
  name: GetSecurityQuestionByUserId(int)
  nameWithType: LoginService.GetSecurityQuestionByUserId(int)
  fullName: EcoVital.Services.LoginService.GetSecurityQuestionByUserId(int)
  type: Method
  source:
    remote:
      path: EcoVital/Services/LoginService.cs
      branch: main
      repo: https://github.com/xDeew/EcoVital_App.git
    id: GetSecurityQuestionByUserId
    path: EcoVital/Services/LoginService.cs
    startLine: 202
  assemblies:
  - EcoVital
  namespace: EcoVital.Services
  summary: Obtiene la pregunta de seguridad por el identificador del usuario.
  example: []
  syntax:
    content: public Task<string> GetSecurityQuestionByUserId(int userId)
    parameters:
    - id: userId
      type: System.Int32
      description: El identificador del usuario.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Una tarea que representa la operación asincrónica y contiene la pregunta de seguridad.
    content.vb: Public Function GetSecurityQuestionByUserId(userId As Integer) As Task(Of String)
  overload: EcoVital.Services.LoginService.GetSecurityQuestionByUserId*
  implements:
  - EcoVital.Services.ILoginRepository.GetSecurityQuestionByUserId(System.Int32)
  nameWithType.vb: LoginService.GetSecurityQuestionByUserId(Integer)
  fullName.vb: EcoVital.Services.LoginService.GetSecurityQuestionByUserId(Integer)
  name.vb: GetSecurityQuestionByUserId(Integer)
- uid: EcoVital.Services.LoginService.GetSecurityQuestionByQuestion(System.String,System.Int32)
  commentId: M:EcoVital.Services.LoginService.GetSecurityQuestionByQuestion(System.String,System.Int32)
  id: GetSecurityQuestionByQuestion(System.String,System.Int32)
  parent: EcoVital.Services.LoginService
  langs:
  - csharp
  - vb
  name: GetSecurityQuestionByQuestion(string, int)
  nameWithType: LoginService.GetSecurityQuestionByQuestion(string, int)
  fullName: EcoVital.Services.LoginService.GetSecurityQuestionByQuestion(string, int)
  type: Method
  source:
    remote:
      path: EcoVital/Services/LoginService.cs
      branch: main
      repo: https://github.com/xDeew/EcoVital_App.git
    id: GetSecurityQuestionByQuestion
    path: EcoVital/Services/LoginService.cs
    startLine: 227
  assemblies:
  - EcoVital
  namespace: EcoVital.Services
  summary: Obtiene la pregunta de seguridad por la pregunta y el identificador del usuario.
  example: []
  syntax:
    content: public Task<SecurityQuestion> GetSecurityQuestionByQuestion(string question, int userId)
    parameters:
    - id: question
      type: System.String
      description: La pregunta de seguridad.
    - id: userId
      type: System.Int32
      description: El identificador del usuario.
    return:
      type: System.Threading.Tasks.Task{EcoVital.Models.SecurityQuestion}
      description: Una tarea que representa la operación asincrónica y contiene la pregunta de seguridad.
    content.vb: Public Function GetSecurityQuestionByQuestion(question As String, userId As Integer) As Task(Of SecurityQuestion)
  overload: EcoVital.Services.LoginService.GetSecurityQuestionByQuestion*
  implements:
  - EcoVital.Services.ILoginRepository.GetSecurityQuestionByQuestion(System.String,System.Int32)
  nameWithType.vb: LoginService.GetSecurityQuestionByQuestion(String, Integer)
  fullName.vb: EcoVital.Services.LoginService.GetSecurityQuestionByQuestion(String, Integer)
  name.vb: GetSecurityQuestionByQuestion(String, Integer)
- uid: EcoVital.Services.LoginService.ChangePassword(System.Int32,System.String)
  commentId: M:EcoVital.Services.LoginService.ChangePassword(System.Int32,System.String)
  id: ChangePassword(System.Int32,System.String)
  parent: EcoVital.Services.LoginService
  langs:
  - csharp
  - vb
  name: ChangePassword(int, string)
  nameWithType: LoginService.ChangePassword(int, string)
  fullName: EcoVital.Services.LoginService.ChangePassword(int, string)
  type: Method
  source:
    remote:
      path: EcoVital/Services/LoginService.cs
      branch: main
      repo: https://github.com/xDeew/EcoVital_App.git
    id: ChangePassword
    path: EcoVital/Services/LoginService.cs
    startLine: 250
  assemblies:
  - EcoVital
  namespace: EcoVital.Services
  summary: Cambia la contraseña del usuario.
  example: []
  syntax:
    content: public Task<bool> ChangePassword(int userId, string newPassword)
    parameters:
    - id: userId
      type: System.Int32
      description: El identificador del usuario.
    - id: newPassword
      type: System.String
      description: La nueva contraseña del usuario.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Una tarea que representa la operación asincrónica y contiene un valor que indica si el cambio de contraseña fue exitoso.
    content.vb: Public Function ChangePassword(userId As Integer, newPassword As String) As Task(Of Boolean)
  overload: EcoVital.Services.LoginService.ChangePassword*
  implements:
  - EcoVital.Services.ILoginRepository.ChangePassword(System.Int32,System.String)
  nameWithType.vb: LoginService.ChangePassword(Integer, String)
  fullName.vb: EcoVital.Services.LoginService.ChangePassword(Integer, String)
  name.vb: ChangePassword(Integer, String)
references:
- uid: EcoVital.Services
  commentId: N:EcoVital.Services
  href: EcoVital.html
  name: EcoVital.Services
  nameWithType: EcoVital.Services
  fullName: EcoVital.Services
  spec.csharp:
  - uid: EcoVital
    name: EcoVital
    href: EcoVital.html
  - name: .
  - uid: EcoVital.Services
    name: Services
    href: EcoVital.Services.html
  spec.vb:
  - uid: EcoVital
    name: EcoVital
    href: EcoVital.html
  - name: .
  - uid: EcoVital.Services
    name: Services
    href: EcoVital.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: EcoVital.Services.ILoginRepository
  commentId: T:EcoVital.Services.ILoginRepository
  parent: EcoVital.Services
  href: EcoVital.Services.ILoginRepository.html
  name: ILoginRepository
  nameWithType: ILoginRepository
  fullName: EcoVital.Services.ILoginRepository
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: EcoVital.Services.LoginService.Login*
  commentId: Overload:EcoVital.Services.LoginService.Login
  href: EcoVital.Services.LoginService.html#EcoVital_Services_LoginService_Login_System_String_System_String_
  name: Login
  nameWithType: LoginService.Login
  fullName: EcoVital.Services.LoginService.Login
- uid: EcoVital.Services.ILoginRepository.Login(System.String,System.String)
  commentId: M:EcoVital.Services.ILoginRepository.Login(System.String,System.String)
  parent: EcoVital.Services.ILoginRepository
  isExternal: true
  href: EcoVital.Services.ILoginRepository.html#EcoVital_Services_ILoginRepository_Login_System_String_System_String_
  name: Login(string, string)
  nameWithType: ILoginRepository.Login(string, string)
  fullName: EcoVital.Services.ILoginRepository.Login(string, string)
  nameWithType.vb: ILoginRepository.Login(String, String)
  fullName.vb: EcoVital.Services.ILoginRepository.Login(String, String)
  name.vb: Login(String, String)
  spec.csharp:
  - uid: EcoVital.Services.ILoginRepository.Login(System.String,System.String)
    name: Login
    href: EcoVital.Services.ILoginRepository.html#EcoVital_Services_ILoginRepository_Login_System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: EcoVital.Services.ILoginRepository.Login(System.String,System.String)
    name: Login
    href: EcoVital.Services.ILoginRepository.html#EcoVital_Services_ILoginRepository_Login_System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{EcoVital.Models.UserInfo}
  commentId: T:System.Threading.Tasks.Task{EcoVital.Models.UserInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<UserInfo>
  nameWithType: Task<UserInfo>
  fullName: System.Threading.Tasks.Task<EcoVital.Models.UserInfo>
  nameWithType.vb: Task(Of UserInfo)
  fullName.vb: System.Threading.Tasks.Task(Of EcoVital.Models.UserInfo)
  name.vb: Task(Of UserInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: EcoVital.Models.UserInfo
    name: UserInfo
    href: EcoVital.Models.UserInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: EcoVital.Models.UserInfo
    name: UserInfo
    href: EcoVital.Models.UserInfo.html
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: EcoVital.Services.LoginService.Register*
  commentId: Overload:EcoVital.Services.LoginService.Register
  href: EcoVital.Services.LoginService.html#EcoVital_Services_LoginService_Register_System_String_System_String_System_String_
  name: Register
  nameWithType: LoginService.Register
  fullName: EcoVital.Services.LoginService.Register
- uid: EcoVital.Services.ILoginRepository.Register(System.String,System.String,System.String)
  commentId: M:EcoVital.Services.ILoginRepository.Register(System.String,System.String,System.String)
  parent: EcoVital.Services.ILoginRepository
  isExternal: true
  href: EcoVital.Services.ILoginRepository.html#EcoVital_Services_ILoginRepository_Register_System_String_System_String_System_String_
  name: Register(string, string, string)
  nameWithType: ILoginRepository.Register(string, string, string)
  fullName: EcoVital.Services.ILoginRepository.Register(string, string, string)
  nameWithType.vb: ILoginRepository.Register(String, String, String)
  fullName.vb: EcoVital.Services.ILoginRepository.Register(String, String, String)
  name.vb: Register(String, String, String)
  spec.csharp:
  - uid: EcoVital.Services.ILoginRepository.Register(System.String,System.String,System.String)
    name: Register
    href: EcoVital.Services.ILoginRepository.html#EcoVital_Services_ILoginRepository_Register_System_String_System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: EcoVital.Services.ILoginRepository.Register(System.String,System.String,System.String)
    name: Register
    href: EcoVital.Services.ILoginRepository.html#EcoVital_Services_ILoginRepository_Register_System_String_System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: EcoVital.Services.LoginService.SendSecurityQuestion*
  commentId: Overload:EcoVital.Services.LoginService.SendSecurityQuestion
  href: EcoVital.Services.LoginService.html#EcoVital_Services_LoginService_SendSecurityQuestion_System_Object_
  name: SendSecurityQuestion
  nameWithType: LoginService.SendSecurityQuestion
  fullName: EcoVital.Services.LoginService.SendSecurityQuestion
- uid: EcoVital.Services.ILoginRepository.SendSecurityQuestion(System.Object)
  commentId: M:EcoVital.Services.ILoginRepository.SendSecurityQuestion(System.Object)
  parent: EcoVital.Services.ILoginRepository
  isExternal: true
  href: EcoVital.Services.ILoginRepository.html#EcoVital_Services_ILoginRepository_SendSecurityQuestion_System_Object_
  name: SendSecurityQuestion(object)
  nameWithType: ILoginRepository.SendSecurityQuestion(object)
  fullName: EcoVital.Services.ILoginRepository.SendSecurityQuestion(object)
  nameWithType.vb: ILoginRepository.SendSecurityQuestion(Object)
  fullName.vb: EcoVital.Services.ILoginRepository.SendSecurityQuestion(Object)
  name.vb: SendSecurityQuestion(Object)
  spec.csharp:
  - uid: EcoVital.Services.ILoginRepository.SendSecurityQuestion(System.Object)
    name: SendSecurityQuestion
    href: EcoVital.Services.ILoginRepository.html#EcoVital_Services_ILoginRepository_SendSecurityQuestion_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: EcoVital.Services.ILoginRepository.SendSecurityQuestion(System.Object)
    name: SendSecurityQuestion
    href: EcoVital.Services.ILoginRepository.html#EcoVital_Services_ILoginRepository_SendSecurityQuestion_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  commentId: T:System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<HttpResponseMessage>
  nameWithType: Task<HttpResponseMessage>
  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>
  nameWithType.vb: Task(Of HttpResponseMessage)
  fullName.vb: System.Threading.Tasks.Task(Of System.Net.Http.HttpResponseMessage)
  name.vb: Task(Of HttpResponseMessage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http.httpresponsemessage
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http.httpresponsemessage
  - name: )
- uid: EcoVital.Services.LoginService.UserExists*
  commentId: Overload:EcoVital.Services.LoginService.UserExists
  href: EcoVital.Services.LoginService.html#EcoVital_Services_LoginService_UserExists_System_String_
  name: UserExists
  nameWithType: LoginService.UserExists
  fullName: EcoVital.Services.LoginService.UserExists
- uid: EcoVital.Services.ILoginRepository.UserExists(System.String)
  commentId: M:EcoVital.Services.ILoginRepository.UserExists(System.String)
  parent: EcoVital.Services.ILoginRepository
  isExternal: true
  href: EcoVital.Services.ILoginRepository.html#EcoVital_Services_ILoginRepository_UserExists_System_String_
  name: UserExists(string)
  nameWithType: ILoginRepository.UserExists(string)
  fullName: EcoVital.Services.ILoginRepository.UserExists(string)
  nameWithType.vb: ILoginRepository.UserExists(String)
  fullName.vb: EcoVital.Services.ILoginRepository.UserExists(String)
  name.vb: UserExists(String)
  spec.csharp:
  - uid: EcoVital.Services.ILoginRepository.UserExists(System.String)
    name: UserExists
    href: EcoVital.Services.ILoginRepository.html#EcoVital_Services_ILoginRepository_UserExists_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: EcoVital.Services.ILoginRepository.UserExists(System.String)
    name: UserExists
    href: EcoVital.Services.ILoginRepository.html#EcoVital_Services_ILoginRepository_UserExists_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: EcoVital.Services.LoginService.GetUserByEmail*
  commentId: Overload:EcoVital.Services.LoginService.GetUserByEmail
  href: EcoVital.Services.LoginService.html#EcoVital_Services_LoginService_GetUserByEmail_System_String_
  name: GetUserByEmail
  nameWithType: LoginService.GetUserByEmail
  fullName: EcoVital.Services.LoginService.GetUserByEmail
- uid: EcoVital.Services.ILoginRepository.GetUserByEmail(System.String)
  commentId: M:EcoVital.Services.ILoginRepository.GetUserByEmail(System.String)
  parent: EcoVital.Services.ILoginRepository
  isExternal: true
  href: EcoVital.Services.ILoginRepository.html#EcoVital_Services_ILoginRepository_GetUserByEmail_System_String_
  name: GetUserByEmail(string)
  nameWithType: ILoginRepository.GetUserByEmail(string)
  fullName: EcoVital.Services.ILoginRepository.GetUserByEmail(string)
  nameWithType.vb: ILoginRepository.GetUserByEmail(String)
  fullName.vb: EcoVital.Services.ILoginRepository.GetUserByEmail(String)
  name.vb: GetUserByEmail(String)
  spec.csharp:
  - uid: EcoVital.Services.ILoginRepository.GetUserByEmail(System.String)
    name: GetUserByEmail
    href: EcoVital.Services.ILoginRepository.html#EcoVital_Services_ILoginRepository_GetUserByEmail_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: EcoVital.Services.ILoginRepository.GetUserByEmail(System.String)
    name: GetUserByEmail
    href: EcoVital.Services.ILoginRepository.html#EcoVital_Services_ILoginRepository_GetUserByEmail_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: EcoVital.Services.LoginService.GetSecurityQuestionByUserId*
  commentId: Overload:EcoVital.Services.LoginService.GetSecurityQuestionByUserId
  href: EcoVital.Services.LoginService.html#EcoVital_Services_LoginService_GetSecurityQuestionByUserId_System_Int32_
  name: GetSecurityQuestionByUserId
  nameWithType: LoginService.GetSecurityQuestionByUserId
  fullName: EcoVital.Services.LoginService.GetSecurityQuestionByUserId
- uid: EcoVital.Services.ILoginRepository.GetSecurityQuestionByUserId(System.Int32)
  commentId: M:EcoVital.Services.ILoginRepository.GetSecurityQuestionByUserId(System.Int32)
  parent: EcoVital.Services.ILoginRepository
  isExternal: true
  href: EcoVital.Services.ILoginRepository.html#EcoVital_Services_ILoginRepository_GetSecurityQuestionByUserId_System_Int32_
  name: GetSecurityQuestionByUserId(int)
  nameWithType: ILoginRepository.GetSecurityQuestionByUserId(int)
  fullName: EcoVital.Services.ILoginRepository.GetSecurityQuestionByUserId(int)
  nameWithType.vb: ILoginRepository.GetSecurityQuestionByUserId(Integer)
  fullName.vb: EcoVital.Services.ILoginRepository.GetSecurityQuestionByUserId(Integer)
  name.vb: GetSecurityQuestionByUserId(Integer)
  spec.csharp:
  - uid: EcoVital.Services.ILoginRepository.GetSecurityQuestionByUserId(System.Int32)
    name: GetSecurityQuestionByUserId
    href: EcoVital.Services.ILoginRepository.html#EcoVital_Services_ILoginRepository_GetSecurityQuestionByUserId_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: EcoVital.Services.ILoginRepository.GetSecurityQuestionByUserId(System.Int32)
    name: GetSecurityQuestionByUserId
    href: EcoVital.Services.ILoginRepository.html#EcoVital_Services_ILoginRepository_GetSecurityQuestionByUserId_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: EcoVital.Services.LoginService.GetSecurityQuestionByQuestion*
  commentId: Overload:EcoVital.Services.LoginService.GetSecurityQuestionByQuestion
  href: EcoVital.Services.LoginService.html#EcoVital_Services_LoginService_GetSecurityQuestionByQuestion_System_String_System_Int32_
  name: GetSecurityQuestionByQuestion
  nameWithType: LoginService.GetSecurityQuestionByQuestion
  fullName: EcoVital.Services.LoginService.GetSecurityQuestionByQuestion
- uid: EcoVital.Services.ILoginRepository.GetSecurityQuestionByQuestion(System.String,System.Int32)
  commentId: M:EcoVital.Services.ILoginRepository.GetSecurityQuestionByQuestion(System.String,System.Int32)
  parent: EcoVital.Services.ILoginRepository
  isExternal: true
  href: EcoVital.Services.ILoginRepository.html#EcoVital_Services_ILoginRepository_GetSecurityQuestionByQuestion_System_String_System_Int32_
  name: GetSecurityQuestionByQuestion(string, int)
  nameWithType: ILoginRepository.GetSecurityQuestionByQuestion(string, int)
  fullName: EcoVital.Services.ILoginRepository.GetSecurityQuestionByQuestion(string, int)
  nameWithType.vb: ILoginRepository.GetSecurityQuestionByQuestion(String, Integer)
  fullName.vb: EcoVital.Services.ILoginRepository.GetSecurityQuestionByQuestion(String, Integer)
  name.vb: GetSecurityQuestionByQuestion(String, Integer)
  spec.csharp:
  - uid: EcoVital.Services.ILoginRepository.GetSecurityQuestionByQuestion(System.String,System.Int32)
    name: GetSecurityQuestionByQuestion
    href: EcoVital.Services.ILoginRepository.html#EcoVital_Services_ILoginRepository_GetSecurityQuestionByQuestion_System_String_System_Int32_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: EcoVital.Services.ILoginRepository.GetSecurityQuestionByQuestion(System.String,System.Int32)
    name: GetSecurityQuestionByQuestion
    href: EcoVital.Services.ILoginRepository.html#EcoVital_Services_ILoginRepository_GetSecurityQuestionByQuestion_System_String_System_Int32_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Threading.Tasks.Task{EcoVital.Models.SecurityQuestion}
  commentId: T:System.Threading.Tasks.Task{EcoVital.Models.SecurityQuestion}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<SecurityQuestion>
  nameWithType: Task<SecurityQuestion>
  fullName: System.Threading.Tasks.Task<EcoVital.Models.SecurityQuestion>
  nameWithType.vb: Task(Of SecurityQuestion)
  fullName.vb: System.Threading.Tasks.Task(Of EcoVital.Models.SecurityQuestion)
  name.vb: Task(Of SecurityQuestion)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: EcoVital.Models.SecurityQuestion
    name: SecurityQuestion
    href: EcoVital.Models.SecurityQuestion.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: EcoVital.Models.SecurityQuestion
    name: SecurityQuestion
    href: EcoVital.Models.SecurityQuestion.html
  - name: )
- uid: EcoVital.Services.LoginService.ChangePassword*
  commentId: Overload:EcoVital.Services.LoginService.ChangePassword
  href: EcoVital.Services.LoginService.html#EcoVital_Services_LoginService_ChangePassword_System_Int32_System_String_
  name: ChangePassword
  nameWithType: LoginService.ChangePassword
  fullName: EcoVital.Services.LoginService.ChangePassword
- uid: EcoVital.Services.ILoginRepository.ChangePassword(System.Int32,System.String)
  commentId: M:EcoVital.Services.ILoginRepository.ChangePassword(System.Int32,System.String)
  parent: EcoVital.Services.ILoginRepository
  isExternal: true
  href: EcoVital.Services.ILoginRepository.html#EcoVital_Services_ILoginRepository_ChangePassword_System_Int32_System_String_
  name: ChangePassword(int, string)
  nameWithType: ILoginRepository.ChangePassword(int, string)
  fullName: EcoVital.Services.ILoginRepository.ChangePassword(int, string)
  nameWithType.vb: ILoginRepository.ChangePassword(Integer, String)
  fullName.vb: EcoVital.Services.ILoginRepository.ChangePassword(Integer, String)
  name.vb: ChangePassword(Integer, String)
  spec.csharp:
  - uid: EcoVital.Services.ILoginRepository.ChangePassword(System.Int32,System.String)
    name: ChangePassword
    href: EcoVital.Services.ILoginRepository.html#EcoVital_Services_ILoginRepository_ChangePassword_System_Int32_System_String_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: EcoVital.Services.ILoginRepository.ChangePassword(System.Int32,System.String)
    name: ChangePassword
    href: EcoVital.Services.ILoginRepository.html#EcoVital_Services_ILoginRepository_ChangePassword_System_Int32_System_String_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
