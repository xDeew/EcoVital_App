### YamlMime:ManagedReference
items:
- uid: EcoVital.Services.FeedbackService
  commentId: T:EcoVital.Services.FeedbackService
  id: FeedbackService
  parent: EcoVital.Services
  children:
  - EcoVital.Services.FeedbackService.#ctor(System.Net.Http.HttpClient)
  - EcoVital.Services.FeedbackService.DeleteFeedbackAsync(System.Int32)
  - EcoVital.Services.FeedbackService.GetAllFeedbacksAsync
  - EcoVital.Services.FeedbackService.GetFeedbackByIdAsync(System.Int32)
  - EcoVital.Services.FeedbackService.PostFeedbackAsync(EcoVital.Models.Feedback)
  langs:
  - csharp
  - vb
  name: FeedbackService
  nameWithType: FeedbackService
  fullName: EcoVital.Services.FeedbackService
  type: Class
  source:
    remote:
      path: EcoVital/Services/FeedBackService.cs
      branch: main
      repo: https://github.com/xDeew/EcoVital_App.git
    id: FeedbackService
    path: EcoVital/Services/FeedBackService.cs
    startLine: 12
  assemblies:
  - EcoVital
  namespace: EcoVital.Services
  summary: Proporciona servicios relacionados con el feedback.
  example: []
  syntax:
    content: public class FeedbackService
    content.vb: Public Class FeedbackService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: EcoVital.Services.FeedbackService.#ctor(System.Net.Http.HttpClient)
  commentId: M:EcoVital.Services.FeedbackService.#ctor(System.Net.Http.HttpClient)
  id: '#ctor(System.Net.Http.HttpClient)'
  parent: EcoVital.Services.FeedbackService
  langs:
  - csharp
  - vb
  name: FeedbackService(HttpClient)
  nameWithType: FeedbackService.FeedbackService(HttpClient)
  fullName: EcoVital.Services.FeedbackService.FeedbackService(System.Net.Http.HttpClient)
  type: Constructor
  source:
    remote:
      path: EcoVital/Services/FeedBackService.cs
      branch: main
      repo: https://github.com/xDeew/EcoVital_App.git
    id: .ctor
    path: EcoVital/Services/FeedBackService.cs
    startLine: 21
  assemblies:
  - EcoVital
  namespace: EcoVital.Services
  summary: Inicializa una nueva instancia de la clase <xref href="EcoVital.Services.FeedbackService" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public FeedbackService(HttpClient httpClient)
    parameters:
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: Instancia de <xref href="System.Net.Http.HttpClient" data-throw-if-not-resolved="false"></xref> para realizar solicitudes HTTP.
    content.vb: Public Sub New(httpClient As HttpClient)
  overload: EcoVital.Services.FeedbackService.#ctor*
  nameWithType.vb: FeedbackService.New(HttpClient)
  fullName.vb: EcoVital.Services.FeedbackService.New(System.Net.Http.HttpClient)
  name.vb: New(HttpClient)
- uid: EcoVital.Services.FeedbackService.GetAllFeedbacksAsync
  commentId: M:EcoVital.Services.FeedbackService.GetAllFeedbacksAsync
  id: GetAllFeedbacksAsync
  parent: EcoVital.Services.FeedbackService
  langs:
  - csharp
  - vb
  name: GetAllFeedbacksAsync()
  nameWithType: FeedbackService.GetAllFeedbacksAsync()
  fullName: EcoVital.Services.FeedbackService.GetAllFeedbacksAsync()
  type: Method
  source:
    remote:
      path: EcoVital/Services/FeedBackService.cs
      branch: main
      repo: https://github.com/xDeew/EcoVital_App.git
    id: GetAllFeedbacksAsync
    path: EcoVital/Services/FeedBackService.cs
    startLine: 30
  assemblies:
  - EcoVital
  namespace: EcoVital.Services
  summary: Obtiene todos los feedbacks.
  example: []
  syntax:
    content: public Task<List<Feedback>> GetAllFeedbacksAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{EcoVital.Models.Feedback}}
      description: Una lista de <xref href="EcoVital.Models.Feedback" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GetAllFeedbacksAsync() As Task(Of List(Of Feedback))
  overload: EcoVital.Services.FeedbackService.GetAllFeedbacksAsync*
- uid: EcoVital.Services.FeedbackService.GetFeedbackByIdAsync(System.Int32)
  commentId: M:EcoVital.Services.FeedbackService.GetFeedbackByIdAsync(System.Int32)
  id: GetFeedbackByIdAsync(System.Int32)
  parent: EcoVital.Services.FeedbackService
  langs:
  - csharp
  - vb
  name: GetFeedbackByIdAsync(int)
  nameWithType: FeedbackService.GetFeedbackByIdAsync(int)
  fullName: EcoVital.Services.FeedbackService.GetFeedbackByIdAsync(int)
  type: Method
  source:
    remote:
      path: EcoVital/Services/FeedBackService.cs
      branch: main
      repo: https://github.com/xDeew/EcoVital_App.git
    id: GetFeedbackByIdAsync
    path: EcoVital/Services/FeedBackService.cs
    startLine: 51
  assemblies:
  - EcoVital
  namespace: EcoVital.Services
  summary: Obtiene un feedback por su identificador.
  example: []
  syntax:
    content: public Task<Feedback> GetFeedbackByIdAsync(int id)
    parameters:
    - id: id
      type: System.Int32
      description: El identificador del feedback.
    return:
      type: System.Threading.Tasks.Task{EcoVital.Models.Feedback}
      description: El <xref href="EcoVital.Models.Feedback" data-throw-if-not-resolved="false"></xref> solicitado.
    content.vb: Public Function GetFeedbackByIdAsync(id As Integer) As Task(Of Feedback)
  overload: EcoVital.Services.FeedbackService.GetFeedbackByIdAsync*
  nameWithType.vb: FeedbackService.GetFeedbackByIdAsync(Integer)
  fullName.vb: EcoVital.Services.FeedbackService.GetFeedbackByIdAsync(Integer)
  name.vb: GetFeedbackByIdAsync(Integer)
- uid: EcoVital.Services.FeedbackService.PostFeedbackAsync(EcoVital.Models.Feedback)
  commentId: M:EcoVital.Services.FeedbackService.PostFeedbackAsync(EcoVital.Models.Feedback)
  id: PostFeedbackAsync(EcoVital.Models.Feedback)
  parent: EcoVital.Services.FeedbackService
  langs:
  - csharp
  - vb
  name: PostFeedbackAsync(Feedback)
  nameWithType: FeedbackService.PostFeedbackAsync(Feedback)
  fullName: EcoVital.Services.FeedbackService.PostFeedbackAsync(EcoVital.Models.Feedback)
  type: Method
  source:
    remote:
      path: EcoVital/Services/FeedBackService.cs
      branch: main
      repo: https://github.com/xDeew/EcoVital_App.git
    id: PostFeedbackAsync
    path: EcoVital/Services/FeedBackService.cs
    startLine: 72
  assemblies:
  - EcoVital
  namespace: EcoVital.Services
  summary: Envía un nuevo feedback.
  example: []
  syntax:
    content: public Task<bool> PostFeedbackAsync(Feedback feedback)
    parameters:
    - id: feedback
      type: EcoVital.Models.Feedback
      description: El feedback a enviar.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: <code>true</code> si el feedback se envió correctamente; de lo contrario, <code>false</code>.
    content.vb: Public Function PostFeedbackAsync(feedback As Feedback) As Task(Of Boolean)
  overload: EcoVital.Services.FeedbackService.PostFeedbackAsync*
- uid: EcoVital.Services.FeedbackService.DeleteFeedbackAsync(System.Int32)
  commentId: M:EcoVital.Services.FeedbackService.DeleteFeedbackAsync(System.Int32)
  id: DeleteFeedbackAsync(System.Int32)
  parent: EcoVital.Services.FeedbackService
  langs:
  - csharp
  - vb
  name: DeleteFeedbackAsync(int)
  nameWithType: FeedbackService.DeleteFeedbackAsync(int)
  fullName: EcoVital.Services.FeedbackService.DeleteFeedbackAsync(int)
  type: Method
  source:
    remote:
      path: EcoVital/Services/FeedBackService.cs
      branch: main
      repo: https://github.com/xDeew/EcoVital_App.git
    id: DeleteFeedbackAsync
    path: EcoVital/Services/FeedBackService.cs
    startLine: 115
  assemblies:
  - EcoVital
  namespace: EcoVital.Services
  summary: Elimina un feedback por su identificador.
  example: []
  syntax:
    content: public Task<bool> DeleteFeedbackAsync(int id)
    parameters:
    - id: id
      type: System.Int32
      description: El identificador del feedback a eliminar.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: <code>true</code> si el feedback se eliminó correctamente; de lo contrario, <code>false</code>.
    content.vb: Public Function DeleteFeedbackAsync(id As Integer) As Task(Of Boolean)
  overload: EcoVital.Services.FeedbackService.DeleteFeedbackAsync*
  nameWithType.vb: FeedbackService.DeleteFeedbackAsync(Integer)
  fullName.vb: EcoVital.Services.FeedbackService.DeleteFeedbackAsync(Integer)
  name.vb: DeleteFeedbackAsync(Integer)
references:
- uid: EcoVital.Services
  commentId: N:EcoVital.Services
  href: EcoVital.html
  name: EcoVital.Services
  nameWithType: EcoVital.Services
  fullName: EcoVital.Services
  spec.csharp:
  - uid: EcoVital
    name: EcoVital
    href: EcoVital.html
  - name: .
  - uid: EcoVital.Services
    name: Services
    href: EcoVital.Services.html
  spec.vb:
  - uid: EcoVital
    name: EcoVital
    href: EcoVital.html
  - name: .
  - uid: EcoVital.Services
    name: Services
    href: EcoVital.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: EcoVital.Services.FeedbackService
  commentId: T:EcoVital.Services.FeedbackService
  parent: EcoVital.Services
  href: EcoVital.Services.FeedbackService.html
  name: FeedbackService
  nameWithType: FeedbackService
  fullName: EcoVital.Services.FeedbackService
- uid: System.Net.Http.HttpClient
  commentId: T:System.Net.Http.HttpClient
  parent: System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.httpclient
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: EcoVital.Services.FeedbackService.#ctor*
  commentId: Overload:EcoVital.Services.FeedbackService.#ctor
  href: EcoVital.Services.FeedbackService.html#EcoVital_Services_FeedbackService__ctor_System_Net_Http_HttpClient_
  name: FeedbackService
  nameWithType: FeedbackService.FeedbackService
  fullName: EcoVital.Services.FeedbackService.FeedbackService
  nameWithType.vb: FeedbackService.New
  fullName.vb: EcoVital.Services.FeedbackService.New
  name.vb: New
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
- uid: EcoVital.Models.Feedback
  commentId: T:EcoVital.Models.Feedback
  parent: EcoVital.Models
  href: EcoVital.Models.Feedback.html
  name: Feedback
  nameWithType: Feedback
  fullName: EcoVital.Models.Feedback
- uid: EcoVital.Services.FeedbackService.GetAllFeedbacksAsync*
  commentId: Overload:EcoVital.Services.FeedbackService.GetAllFeedbacksAsync
  href: EcoVital.Services.FeedbackService.html#EcoVital_Services_FeedbackService_GetAllFeedbacksAsync
  name: GetAllFeedbacksAsync
  nameWithType: FeedbackService.GetAllFeedbacksAsync
  fullName: EcoVital.Services.FeedbackService.GetAllFeedbacksAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{EcoVital.Models.Feedback}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{EcoVital.Models.Feedback}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<List<Feedback>>
  nameWithType: Task<List<Feedback>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<EcoVital.Models.Feedback>>
  nameWithType.vb: Task(Of List(Of Feedback))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of EcoVital.Models.Feedback))
  name.vb: Task(Of List(Of Feedback))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: EcoVital.Models.Feedback
    name: Feedback
    href: EcoVital.Models.Feedback.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: EcoVital.Models.Feedback
    name: Feedback
    href: EcoVital.Models.Feedback.html
  - name: )
  - name: )
- uid: EcoVital.Models
  commentId: N:EcoVital.Models
  href: EcoVital.html
  name: EcoVital.Models
  nameWithType: EcoVital.Models
  fullName: EcoVital.Models
  spec.csharp:
  - uid: EcoVital
    name: EcoVital
    href: EcoVital.html
  - name: .
  - uid: EcoVital.Models
    name: Models
    href: EcoVital.Models.html
  spec.vb:
  - uid: EcoVital
    name: EcoVital
    href: EcoVital.html
  - name: .
  - uid: EcoVital.Models
    name: Models
    href: EcoVital.Models.html
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: EcoVital.Services.FeedbackService.GetFeedbackByIdAsync*
  commentId: Overload:EcoVital.Services.FeedbackService.GetFeedbackByIdAsync
  href: EcoVital.Services.FeedbackService.html#EcoVital_Services_FeedbackService_GetFeedbackByIdAsync_System_Int32_
  name: GetFeedbackByIdAsync
  nameWithType: FeedbackService.GetFeedbackByIdAsync
  fullName: EcoVital.Services.FeedbackService.GetFeedbackByIdAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task{EcoVital.Models.Feedback}
  commentId: T:System.Threading.Tasks.Task{EcoVital.Models.Feedback}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Feedback>
  nameWithType: Task<Feedback>
  fullName: System.Threading.Tasks.Task<EcoVital.Models.Feedback>
  nameWithType.vb: Task(Of Feedback)
  fullName.vb: System.Threading.Tasks.Task(Of EcoVital.Models.Feedback)
  name.vb: Task(Of Feedback)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: EcoVital.Models.Feedback
    name: Feedback
    href: EcoVital.Models.Feedback.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: EcoVital.Models.Feedback
    name: Feedback
    href: EcoVital.Models.Feedback.html
  - name: )
- uid: EcoVital.Services.FeedbackService.PostFeedbackAsync*
  commentId: Overload:EcoVital.Services.FeedbackService.PostFeedbackAsync
  href: EcoVital.Services.FeedbackService.html#EcoVital_Services_FeedbackService_PostFeedbackAsync_EcoVital_Models_Feedback_
  name: PostFeedbackAsync
  nameWithType: FeedbackService.PostFeedbackAsync
  fullName: EcoVital.Services.FeedbackService.PostFeedbackAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: EcoVital.Services.FeedbackService.DeleteFeedbackAsync*
  commentId: Overload:EcoVital.Services.FeedbackService.DeleteFeedbackAsync
  href: EcoVital.Services.FeedbackService.html#EcoVital_Services_FeedbackService_DeleteFeedbackAsync_System_Int32_
  name: DeleteFeedbackAsync
  nameWithType: FeedbackService.DeleteFeedbackAsync
  fullName: EcoVital.Services.FeedbackService.DeleteFeedbackAsync
