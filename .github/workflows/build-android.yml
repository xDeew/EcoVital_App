name: Build MAUI Android (APK)

on:
  workflow_dispatch:
    inputs:
      target_ref:
        description: 'Branch to build'
        required: true
        default: 'revive-local-mock'
  push:
    branches: [ main, revive-local-mock ]

jobs:
  build-android:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && inputs.target_ref || github.ref }}
          fetch-depth: 0

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      # Usa el SDK exacto que marca global.json (8.0.206 en tu repo)
      - name: Setup .NET from global.json
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: dotnet --info
        run: dotnet --info
        shell: pwsh

      # IMPORTANTE: restaurar workload SOLO del proyecto MAUI, no de la soluci√≥n
      - name: Restore MAUI workload (project-scoped)
        run: dotnet workload restore EcoVital/EcoVital.csproj
        shell: pwsh

      - name: Restore NuGet (project)
        run: dotnet restore EcoVital/EcoVital.csproj
        shell: pwsh

      - name: Build Debug (net8.0-android)
        run: dotnet build EcoVital/EcoVital.csproj -c Debug -f net8.0-android /p:SkipInvalidConfigurations=true
        shell: pwsh

      - name: Publish Debug APK
        run: dotnet publish EcoVital/EcoVital.csproj -c Debug -f net8.0-android /p:AndroidPackageFormat=apk /p:EmbedAssembliesIntoApk=true
        shell: pwsh

      - name: List APKs
        run: Get-ChildItem -Recurse -Filter *.apk | ForEach-Object { Write-Host $_.FullName }
        shell: pwsh

      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: |
            EcoVital/bin/Debug/net8.0-android/**/*.apk
            **/*.apk
