name: Build MAUI Android APK

on:
  workflow_dispatch:
  push:
    branches: [ main, revive-local-mock ]

jobs:
  build-android:
    runs-on: windows-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      NUGET_XMLDOC_MODE: skip

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 8.0.206
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.206

      - name: Show dotnet info
        run: dotnet --info

      # Instala solo el workload necesario (android) para MAUI
      - name: Install MAUI Android workload
        run: dotnet workload install maui-android --source https://api.nuget.org/v3/index.json

      # Hack CI: crea un namespace vac√≠o para que el 'using EcoVital.Config' no falle
      - name: Add placeholder EcoVital.Config (CI only)
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path "EcoVital/Config" | Out-Null
          @"
          // Created by CI to satisfy 'using EcoVital.Config;'
          namespace EcoVital.Config { /* intentionally empty for CI build */ }
          "@ | Out-File -FilePath "EcoVital/Config/Placeholder.cs" -Encoding UTF8

      - name: Restore (project only)
        run: dotnet restore EcoVital/EcoVital.csproj

      - name: Build Debug APK (net8.0-android)
        run: dotnet build EcoVital/EcoVital.csproj -c Debug -f net8.0-android /p:SkipInvalidConfigurations=true /p:AndroidPackageFormat=apk

      - name: List output
        shell: pwsh
        run: Get-ChildItem -Recurse "EcoVital/bin/Debug/net8.0-android" | Select-Object FullName

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: EcoVital-APK-Debug
          path: |
            EcoVital/bin/Debug/net8.0-android/*.apk
